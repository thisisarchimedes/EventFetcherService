AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys a Lambda function to fetch and process contracts events to the DB.

Globals:
  Function:
    Timeout: 20

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 's3-object-lambda:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:TagResource'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
        - PolicyName: LambdaAppConfigAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'appconfig:GetConfiguration'
                Resource: '*'

  WBTCEventsFetcher:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda-handler.handler
      Runtime: nodejs16.x
      CodeUri: ./deploy-package
      FunctionName: !Sub 'WBTCEventsFetcher${FunctionNameSuffix}'
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        EveryMinuteEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          NEW_RELIC_API_KEY: !Ref NewRelicApiKey
          
Parameters:
  Environment:
    Type: String
    Description: Environment
    Default: 'DemoApp'

  FunctionNameSuffix:
    Type: String
    Description: Function Name Suffix
    Default: ''

  NewRelicApiKey:
    Type: String
    Description: New Relic API Key
