name: Deploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  API_DEVOPS_EVENT_CATCHER: ${{ vars.API_DEVOPS_EVENT_CATCHER }}
  DEVOPS_EVENTS_SECRET_TOKEN: ${{ secrets.DEVOPS_EVENTS_SECRET_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          
      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Remove development dependencies
        run: npm prune --production

      - name: Prepare deployment package
        run: |
          mkdir -p deploy-package
          rsync -av --progress ./dist/ ./deploy-package/ --exclude test
          cp -r ./node_modules ./deploy-package/

      - name: List contents of deploy-package directory
        run: ls -al ./deploy-package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Install AWS SAM CLI
        run: pip install --user aws-sam-cli

      - name: Package the SAM application
        run: sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket aws-sam-eventsfetcher

      - name: Deploy the SAM application
        id: deploy
        run: |
          sam deploy --debug --template-file packaged.yaml --stack-name EventProcessorStack --capabilities CAPABILITY_IAM --parameter-overrides \
          ParameterKey=NewEventsQueueUrl,ParameterValue="${{ secrets.NEW_EVENTS_QUEUE_URL }}" \
          ParameterKey=S3Bucket,ParameterValue="${{ secrets.S3_BUCKET }}" \
          ParameterKey=S3BucketConfig,ParameterValue="${{ secrets.S3_BUCKET_CONFIG }}" \
          ParameterKey=S3LastBlockKey,ParameterValue="${{ secrets.S3_LAST_BLOCK_KEY }}" \
          ParameterKey=S3DeploymentAddressKey,ParameterValue="${{ secrets.S3_DEPLOYMENT_ADDRESS_KEY }}" \
          ParameterKey=EventsFetchPageSize,ParameterValue="${{ secrets.EVENTS_FETCH_PAGE_SIZE }}" \
          ParameterKey=NewRelicAPIKey,ParameterValue="${{ secrets.NEW_RELIC_API_KEY }}" \
          ParameterKey=S3TestForkKey,ParameterValue="${{ secrets.S3_TEST_FORK_KEY }}" \
          ParameterKey=S3DemoForkKey,ParameterValue="${{ secrets.S3_DEMO_FORK_KEY }}" \
          ParameterKey=Environment,ParameterValue="staging"

  deploy_demo:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Remove development dependencies
        run: npm prune --production

      - name: Prepare deployment package
        run: |
          mkdir -p deploy-package
          rsync -av --progress ./dist/ ./deploy-package/ --exclude test
          cp -r ./node_modules ./deploy-package/

      - name: List contents of deploy-package directory
        run: ls -al ./deploy-package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS SAM CLI
        run: pip install --user aws-sam-cli

      - name: Package the SAM application
        run: sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket aws-sam-eventsfetcher

      - name: Deploy the SAM application
        id: deploy
        run: |
          sam deploy --debug --template-file packaged.yaml --stack-name EventProcessorStackDemo --capabilities CAPABILITY_IAM --parameter-overrides \
          ParameterKey=NewEventsQueueUrl,ParameterValue="${{ secrets.NEW_EVENTS_QUEUE_URL }}" \
          ParameterKey=NewEventsQueueUrlDemo,ParameterValue="${{ secrets.NEW_EVENTS_QUEUE_URL_DEMO }}" \
          ParameterKey=S3Bucket,ParameterValue="${{ secrets.S3_BUCKET }}" \
          ParameterKey=S3BucketDemo,ParameterValue="${{ secrets.S3_BUCKET_DEMO }}" \
          ParameterKey=S3BucketConfig,ParameterValue="${{ secrets.S3_BUCKET_CONFIG }}" \
          ParameterKey=S3LastBlockKey,ParameterValue="${{ secrets.S3_LAST_BLOCK_KEY }}" \
          ParameterKey=S3DeploymentAddressKey,ParameterValue="${{ secrets.S3_DEPLOYMENT_ADDRESS_KEY }}" \
          ParameterKey=S3DeploymentAddressKeyDemo,ParameterValue="${{ secrets.S3_DEPLOYMENT_ADDRESS_KEY_DEMO }}" \
          ParameterKey=EventsFetchPageSize,ParameterValue="${{ secrets.EVENTS_FETCH_PAGE_SIZE }}" \
          ParameterKey=NewRelicAPIKey,ParameterValue="${{ secrets.NEW_RELIC_API_KEY }}" \
          ParameterKey=S3TestForkKey,ParameterValue="${{ secrets.S3_TEST_FORK_KEY }}" \
          ParameterKey=S3DemoForkKey,ParameterValue="${{ secrets.S3_DEMO_FORK_KEY }}" \
          ParameterKey=Environment,ParameterValue="demo"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

      - name: Report Deploy DevOps Event
        run: |
        npm install axios dotenv
        node devops/metrics/src/cicd_script/report_devops_event.js ${{ github.repository }} "deploy"
